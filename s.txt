显示输出...

git: 版本控制软件
分布式版本控制软件
命令：
git add:将本地文件 增加到暂存区
git commit:将暂存区的内容 提交到 本地仓库（本地分支，默认master分支）
git push: 将本地仓库的内容 推送到 远程仓库（远程分支）

git pull: 将远程仓库的（远程分支）的内容 拉取到 本地仓库（本地分支）

安装git
msysgit.github.io
安装时：Use git from git bash only..其他默认下一步
配置path: E:\programs\Git\bin(默认git路径)
配置git账号命令：
git config --global user.name
git config --global user.email

git官网
git统一的托管网站（https://github.com/）
为了在本地和远程仓库之间进行免密钥登录，可以配置ssh
在本地和远程仓库之间进行免密钥登录，可以配置ssh
配置ssh: 现在本地配置，发送给远程
现在本地生成ssh:
ssh-keygen -t rsa -C 1262810487@qq.com 一直回车
发送给远程：
github - settings - SSH and ... - New SSH - title任意，key中输入 
刚才在本地生成的ssh:
github - stting - SSH and ... - New SSH - title任意，key中输入
刚才在本地生成的ssh: 将本地刚才生成的id_rsa.pub内容复制到远程的key中

测试联通性
ssh -T git@github.com
如果本地和远程成功通信，则可以在 /.ssh目录中发现knows_hosts文件
如果失败：多尝试几次

在本地新建git项目
在项目根目录 右键- git bash - git init

在远程建立git项目


将远程项目与本地项目进行关联


本地项目-远程项目关联
执行命令与远程项目关联
git remote add oragin 
与ssh通信
git remote add origin git@github.com:1262810487/T1.git


第一次发布项目（本地-远程）
git init       .初始化内容
git add .       //文件-暂存区
git commit -m  "注释内容"  //暂存区-本地分支（默认master）
#第一次通信 git remote add origin git@github.com:1262810487/T1.git
git push -u origin master

第一次下载项目（远程-本地）
git clone 
git clone git@github.com:1262810487/T1.git






###################
[mysqld]

# port
port=3306

# set basedir to your installation path
basedir=c:\\AppData\\Mysql软件

# set datadir to the location or your data directory
datadir=c:\\AppData\\Mysql软件\\data

